Table de hachage :
	-> dans chaque case (entrée) :
		-> un ou plusieurs s_node (liste chaînée, triée par ordre alphabétique)
			-> s_node node->data = chaîne de caractères (char *)
	-> nombre de cases (entrées) : fixé à la création de la table
	-> calcul de la clé :
		-> fonction privée dans la fonction de gestion de la table de hachage

A faire :
	-> Fichier strhash.c (Inclure le fichier "strhash.h" et définir les fonctions) :
		-> hash_create()   --- Créer la table de hachage

		-> hash_destroy()   --- Libérer les données enregistrées et détruire la table de hachage

		-> hash_append()   --- Ajouter un mot dans la table de hachage

		-> hash_remove()   --- Supprimer un mot dans la table de hachage

		-> hash_stats()   --- Afficher des données statistiques concernant la table de hachage (nombre total d'éléments / nombre minimum et maximum d'éléments par entrée, écart-type du nombre d'éléments par entrée)

	-> Fichier strhash.h :
		-> créer la structure d'une table de hachage :

			typedef struct _hash_node s_hash;
			struct _hash_node {
				s_node ** nodes;
				int size;
			};

		-> fonctions de "strhash.c" à déclarer